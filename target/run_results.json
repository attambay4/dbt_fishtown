{"results": [{"node": {"raw_sql": "{{\r\n    config(\r\n        materialized = 'table',\r\n        dist = 'user_id',\r\n        sort = 'created_at'\r\n    )\r\n}}\r\n\r\nwith orders as (\r\n    select * from {{ref('orders')}}\r\n),\r\n\r\nfirst_order_device as (\r\n    select * from {{ref('first_order_device')}}\r\n),\r\n\r\nfirst_order as (\r\n    select * from {{ref('first_order')}}\r\n),\r\n\r\naddresses as (\r\n    select * from {{ref('addresses')}}\r\n),\r\n\r\ngross_payments as (\r\n    select * from {{ref('gross_payments')}}\r\n),\r\n\r\njoined as (\r\n    SELECT\r\n        orders.order_id, \r\n        orders.user_id, \r\n        orders.created_at, \r\n        orders.updated_at, \r\n        orders.shipped_at, \r\n        orders.currency, \r\n        orders.status AS order_status,\r\n        orders.order_status_category,\r\n        addresses.country_type,\r\n        orders.shipping_method,\r\n        first_order_device.purchase_device_type,\r\n        first_order_device.purchase_device,\r\n        first_order.first_order_id,\r\n        orders.amount_total_cents,\r\n        gross_payments.gross_tax_amount_cents, \r\n        gross_payments.gross_amount_cents, \r\n        gross_payments.gross_shipping_amount_cents,\r\n        gross_payments.gross_total_amount_cents\r\n    from orders \r\n    left join first_order_device\r\n    using (order_id)\r\n    left join first_order\r\n    using (user_id)\r\n    left join addresses\r\n    using (order_id)\r\n    left join gross_payments\r\n    using (order_id)\r\n),\r\n\r\n--determining 1. if the order is first time (new) or repeated\r\n--determining 2. total payments for within US and outside shipping\r\ncategories as (\r\n    select *,\r\n           case \r\n                when first_order_id = order_id THEN 'new' \r\n                else 'repeat' \r\n           end as user_type,     \r\n           case\r\n                when currency = 'USD' then amount_total_cents \r\n                else gross_total_amount_cents \r\n           end as total_amount_cents\r\n    from joined\r\n),\r\n\r\n--determining amounts in USD\r\nfinal as (\r\n    select \r\n        *,\r\n        trunc((amount_total_cents / 100),2) as order_amount_total,\r\n        trunc((total_amount_cents/ 100),2) as total_amount, \r\n        trunc((gross_tax_amount_cents/ 100),2) as gross_tax_amount, \r\n        trunc((gross_amount_cents/ 100),2) as gross_amount, \r\n        trunc((gross_shipping_amount_cents/ 100),2) as gross_shipping_amount,\r\n        trunc((gross_total_amount_cents/ 100),2) as gross_total_amount\r\n    from categories \r\n)\r\n\r\nselect * from final", "compiled": true, "database": "fishtown-interview-292223", "schema": "dbt_atambay", "fqn": ["jaffle_shop", "transform", "order_details"], "unique_id": "model.jaffle_shop.order_details", "package_name": "jaffle_shop", "root_path": "C:\\fishtown\\jaffle-shop", "path": "transform\\order_details.sql", "original_file_path": "models\\transform\\order_details.sql", "name": "order_details", "resource_type": "model", "alias": "order_details", "checksum": {"name": "sha256", "checksum": "7fca451f632d10f8ca880d2190c7efb32b6f2305dc640b853d8f38aa9ded995e"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "dist": "user_id", "sort": "created_at"}, "tags": [], "refs": [["orders"], ["first_order_device"], ["first_order"], ["addresses"], ["gross_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.jaffle_shop.orders", "model.jaffle_shop.first_order_device", "model.jaffle_shop.first_order", "model.jaffle_shop.addresses", "model.jaffle_shop.gross_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\jaffle_shop\\models\\transform\\order_details.sql", "deferred": false, "compiled_sql": "\n\nwith orders as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`orders`\n),\n\nfirst_order_device as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`first_order_device`\n),\n\nfirst_order as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`first_order`\n),\n\naddresses as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`addresses`\n),\n\ngross_payments as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`gross_payments`\n),\n\njoined as (\n    SELECT\n        orders.order_id, \n        orders.user_id, \n        orders.created_at, \n        orders.updated_at, \n        orders.shipped_at, \n        orders.currency, \n        orders.status AS order_status,\n        orders.order_status_category,\n        addresses.country_type,\n        orders.shipping_method,\n        first_order_device.purchase_device_type,\n        first_order_device.purchase_device,\n        first_order.first_order_id,\n        orders.amount_total_cents,\n        gross_payments.gross_tax_amount_cents, \n        gross_payments.gross_amount_cents, \n        gross_payments.gross_shipping_amount_cents,\n        gross_payments.gross_total_amount_cents\n    from orders \n    left join first_order_device\n    using (order_id)\n    left join first_order\n    using (user_id)\n    left join addresses\n    using (order_id)\n    left join gross_payments\n    using (order_id)\n),\n\n--determining 1. if the order is first time (new) or repeated\n--determining 2. total payments for within US and outside shipping\ncategories as (\n    select *,\n           case \n                when first_order_id = order_id THEN 'new' \n                else 'repeat' \n           end as user_type,     \n           case\n                when currency = 'USD' then amount_total_cents \n                else gross_total_amount_cents \n           end as total_amount_cents\n    from joined\n),\n\n--determining amounts in USD\nfinal as (\n    select \n        *,\n        trunc((amount_total_cents / 100),2) as order_amount_total,\n        trunc((total_amount_cents/ 100),2) as total_amount, \n        trunc((gross_tax_amount_cents/ 100),2) as gross_tax_amount, \n        trunc((gross_amount_cents/ 100),2) as gross_amount, \n        trunc((gross_shipping_amount_cents/ 100),2) as gross_shipping_amount,\n        trunc((gross_total_amount_cents/ 100),2) as gross_total_amount\n    from categories \n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith orders as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`orders`\n),\n\nfirst_order_device as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`first_order_device`\n),\n\nfirst_order as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`first_order`\n),\n\naddresses as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`addresses`\n),\n\ngross_payments as (\n    select * from `fishtown-interview-292223`.`dbt_atambay`.`gross_payments`\n),\n\njoined as (\n    SELECT\n        orders.order_id, \n        orders.user_id, \n        orders.created_at, \n        orders.updated_at, \n        orders.shipped_at, \n        orders.currency, \n        orders.status AS order_status,\n        orders.order_status_category,\n        addresses.country_type,\n        orders.shipping_method,\n        first_order_device.purchase_device_type,\n        first_order_device.purchase_device,\n        first_order.first_order_id,\n        orders.amount_total_cents,\n        gross_payments.gross_tax_amount_cents, \n        gross_payments.gross_amount_cents, \n        gross_payments.gross_shipping_amount_cents,\n        gross_payments.gross_total_amount_cents\n    from orders \n    left join first_order_device\n    using (order_id)\n    left join first_order\n    using (user_id)\n    left join addresses\n    using (order_id)\n    left join gross_payments\n    using (order_id)\n),\n\n--determining 1. if the order is first time (new) or repeated\n--determining 2. total payments for within US and outside shipping\ncategories as (\n    select *,\n           case \n                when first_order_id = order_id THEN 'new' \n                else 'repeat' \n           end as user_type,     \n           case\n                when currency = 'USD' then amount_total_cents \n                else gross_total_amount_cents \n           end as total_amount_cents\n    from joined\n),\n\n--determining amounts in USD\nfinal as (\n    select \n        *,\n        trunc((amount_total_cents / 100),2) as order_amount_total,\n        trunc((total_amount_cents/ 100),2) as total_amount, \n        trunc((gross_tax_amount_cents/ 100),2) as gross_tax_amount, \n        trunc((gross_amount_cents/ 100),2) as gross_amount, \n        trunc((gross_shipping_amount_cents/ 100),2) as gross_shipping_amount,\n        trunc((gross_total_amount_cents/ 100),2) as gross_total_amount\n    from categories \n)\n\nselect * from final"}, "error": null, "status": "CREATE TABLE (999.0 rows, 267.1 KB processed)", "execution_time": 3.4470441341400146, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-15T01:27:39.388648Z", "completed_at": "2020-10-15T01:27:39.427618Z"}, {"name": "execute", "started_at": "2020-10-15T01:27:39.428539Z", "completed_at": "2020-10-15T01:27:42.833766Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-10-15T01:27:42.844707Z", "elapsed_time": 4.6708245277404785}